TODO Pygame Cris:
  PlainTasks:
    (plugin de Sublime para gestionar tareas)
    ctrl + enter  - nueva tarea
    ctrl + i      - convertir linea en tarea
    ctrl + d      - Done
    alt  + c      - Cancel
    
    type c, press tab key — @critical
    type h, press tab key — @high
    type l, press tab key — @low
    type t, press tab key — @today

    ctrl + space   - tag list

    ctrl + shift + up, down - mover tarea
    ctrl + R     - Lista de secciones

    ctrl+shift+A - Archiva tarea
    ctrl+shift+O - Archiva tarea en otro archivo.

    links       - Para el proyecto reciente, activar con alt+o
                  texto...
                  [[.\..\\grupo_state.py::def update(self)]]
             

--- ✄ -----------------------
ERRORES:

  ☐ Arreglar fuente en texto de pantalla inicial.
  ☐ Cuando se clickea una posición inaccesible por no caber, se bloquea y genera error... sucede porque en el modulo astar salta -1 si no hay camino y se vuelve loco... estudiar este tema.


  ERROR al combinar el pathfinding con las colisiones en el cual pasan dos cosas:

    ☐ Error 2. El juego se bloquea sin más. CAUSA: Buscando el problema. tras colisionar se bloquea en el  método intercolisión() de grupo_state. En este método hay un bucle while... Es lo que se bloquea cuando el elemento A colisiona con B en diagonal... Resulta que lariable direccion de elementos en ocasiones está en (0,0) y el retroceso para reajustar la posición tras una colisión es inválido, no modifica nada.


  El problema tiene que ver cuando la posición del personaje está en la lista cerrada.

 Buscando camino
Generando waypoints
Creado self.waypoints_pixel
    Nueva ruta para Cris: [(517, 671), (561, 671)]

ESQUIVANDO OBJETO........
    orig, dest (635, 653) [563, 678]
 Buscando camino
lista abierta vacía
Camino no encontrado
Camino no encontrado (desde Elemento.pathfinding()
 Buscando camino
lista abierta vacía
Camino no encontrado
    Nueva ruta para Cris: []
    ruta de evasión:  [(485, 703), (535, 753), (635, 653)]

error en intercolision



--- ✄ -----------------------
CAMBIOS:
  EN LA SIGUIENTE VERSIÓN IMPLANTO LOS SIGUIENTES CAMBIOS...
  ☐ modifico las colisiones para que en lugar del rectángulo reducido rectcol, utilice el original de 36x36 pixeles

  ☐ Gestionar en el módulo grupo_state el pathfinding. para ello crearé una única matriz del mapa con los rectángulos accesibles desde la cual los elementos buscarán el camino correcto.

  ☐ crearé otra matriz del mismo tamaño que el mapa en el que estarán situados todos los elementos del mapa, se utilizará para que los elementos evadan también a los otros elementos sin dejar de actuar cuando estén próximos, determinada esta vez por su rectángulo de 36x36, que es mayor que el de las celdas de la matriz del mapa (22x22). Esta matriz de los elementos se actualizará con cada update.

  ☐  eliminar evasión del método intercolisión() del módulo grupo_elementos, ya que desde que estén implantados los cambios anteriores, esto será gestionado con el pathfinding y las dos matrices de celdas accesibles. por defecto los personajes evadirán a los otros elementos a no ser que la colisión los detenga.

  ☐ crear minimapa


TAREAS:
  ☐  poder maximizar pantalla o cambiar tamaño.









 _CONTROLANDO MOVIMIENTOS Y COLISIONES DEL PERSONAJE:
   ☐ Si al hacer click no es pisable, cambiar icono de ratón y hacer sonido.
   ☐ Si se hace click con un elemento sobre el que se puede interactuar. Este devolverá una posición para el pathfinding y al alcanzarla, lanzará un diálogo.



 _AÑADIR MÓDULO FPS:
   Necesario el módulo para controlar que los FPS del juego se mantengan como máximo en 25.
   ☐ Desarrollar proyecto.

   ☐  ser capaz de configurar los fps desde el juego.


 _LAYERS:
   Cambiar el tratamiento de los layers del mapa
   ☐ Convertir los tiles en objetos con prioridades y alturas
   ☐ En el dibujado, incorporar los personajes según su altura
   ☐ Incorporar actualización únicamente al cuadro de los elementos que han cambiado.

 TECLADO_SCROLL:
   ☐ Hacer posible cambiar el foco del scroll al movimiento del cursor.

 _DIALOGOS:
   ☐ Crear módulo diálogos en el que se contienen preconfigurados diferentes tipos de diálogos. Desde el state se solicitan el tipo correspondiente y se rellena el texto. 
   ☐ crear tipo de diálogo 'pregunta: si,no'
   ☐ crear tipo de diálogo: ' solo texto' (con una selección para cerrar o continuar)
   ☐ crear tipo de diálogo 'conversación, dos respuestas'
   ☐ Diálogos con video y audio.

 _MENU INICIAL:
   ☐ Hacer que menu inicio se active con click.

 _LIMPIEZA DE CÓDIGO:
   ☐ Comprobar los imports inutiles.
   ☐ Acabar state_base de la que heredarán el resto de states.
   ☐ En los módulos, separar de los objetos los métodos que no necesitan estar dentro.
     ☐ Sacar método 'genera sprite' de objeto Escenario

   ☐ Para objetos fijos, crear un objeto elementos_lite

 _

 _PRÓXIMOS AÑADIDOS:
    Ideas de eventos en Collao State:
      ☐ evento u2
      ☐ internado con Mastermind y Marta.
      ☐ rebaño en el collao
      ☐ tumba con susto
      ☐ disparar corazones. 

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔  SOLUCIÓN: Si ese elemento con el que colisiona no se va a mover, detener el elemeto en lugar de esquivar. @done (17-02-21 20:04) @project(ERRORES / ERROR. Se crea un bucle si la posición de destino de un elemento está distancia de colisión a un elemento fijo y utiliza su método esquivar para sortearlo)
 ✔ Error 1. Me indica que no existe el parámetro waypoints_pixel en el objeto astar (el cual contiene las coordenadar para trazar el camino). CAUSA. Veo que el módulo Astar no encuentra el camino y devuelve una lista vacía que el módulo Elementos no interpretaba bien.       SOLUCIÓN:   Modifico el método esquivar() para que si recibe una lista vacía después de pathfinding(), pare el elemento. @done (17-02-20 21:53) @project(ERRORES / ERROR al combinar el pathfinding con las colisiones en el cual pasan dos cosas)
 ✔ Eliminar de módulo grupo_state función no_pisable(), que reajusta la posición de los elementos cuando colisionan para que no se muestren atravesándose, y se añade esta función al método ya existente intercolisión() @today @done (17-02-17 12:46) @project(TAREAS)
 ✔ Cambiar update ed grupo_state respecto a mover elementos: Mover elementos-comprobar colisiones-reajustar posiciones de elementos colisionados - gestionar eventos. @today @done (17-02-17 12:46) @project(TAREAS)
 ✔ Modificar colisiones() en módulo 'State' para que, a no ser que la colisión genere un evento, por defecto los elementos que tienen ruta y colisionan retrocedan y recalculen su ruta. @today PENDIENTE TESTEAR [ ] @done (17-02-15 18:42) @project(TAREAS / _CONTROLANDO MOVIMIENTOS Y COLISIONES DEL PERSONAJE)
 ✔ Incorporar retroceso para casos en los que colisiones diferentes elementos @today . Incorporo método rerutear() en 'elementos'. PENDIENTE TESTEAR [ ] @done (17-02-15 18:42) @project(TAREAS / _CONTROLANDO MOVIMIENTOS Y COLISIONES DEL PERSONAJE)
 ✔ Si el elemento colisiona, sin haber hecho click sobre él, puede iniciarse una acción. @today @done (17-02-14 13:34) @project(TAREAS / _CONTROLANDO MOVIMIENTOS Y COLISIONES DEL PERSONAJE)
 ✔ El personaje tiene que detenerse al colisionar con algo que le impide pasar. @today @done (17-02-14 13:34) @project(TAREAS / _CONTROLANDO MOVIMIENTOS Y COLISIONES DEL PERSONAJE)
 ✔ El personaje se detiene si se abre un diálogo. @today @done (17-02-14 13:34) @project(TAREAS / _CONTROLANDO MOVIMIENTOS Y COLISIONES DEL PERSONAJE)
 ✔ SOLUCIÓN: Debería, tras comprobarse que no es pisable, quedarse el elemento A en contacto con el elemento B, y no a más distancia. Para esto implemento algoritmo en el que se tiene en cuenta dos puntos: La dirección por la que se acerca el elemento A al elemento B y la distancia correcta para que se mantengan en contacto sin estar uno dentro de otro. Debo crear también un atributo dirección al objeto elemento para indicar hacia donde se mueve y utilizarlo en la fórmula. Añado atributo a cada elemento 'matriz-astar' con el mapa sobre el cual se tiene que mover. Ya que cuando detecta colisión, recalcula su nuevo camino para evadir el elemento con el que colisiona. Aunque esto se puede frenar si un evento a causa de la colisión requiriese que el elemento se detenga. Elimino el atributo 'matriz_astar' del módulo 'escenario' ya que a partir de ahora, cada objeto elemento tendrá el suyo propio adaptado a su tamaño.  SOLUCIÓN (ALGORITMO) Distancia = (Aw//2 + Bw//2 , Ah//2 + Bh//2); si hay colisión: se crea un bucle rectificando la posición del elemento A hasta que se queda a distancia de colisión, sin estar dentro. [[E:\Mis documentos\Dropbox\Proyectos Phyton\Pygame.Cris\grupo_state.py::def es_pisable(self,element)]] @done (17-02-14 13:26) @project(ERRORES / _Problema con la colisiones entre elementos tras añadir pathfinding)
 ✔ ERROR: No detecta las colisiones cuando el personaje se mueve. @critical @error @today @done (17-02-14 13:26) @project(ERRORES / _Problema con la colisiones entre elementos tras añadir pathfinding)
 ✔ CAUSA: En el módulo grupo_state. el método es_pisable() llamado por update() comprueba si la posición a la que avanzará el elemento está ocupado por otro. Es ese caso anula el movimiento pero también impide que colisionen si la variable 'velocidad' del obj. <Elemento> (que indica la cantidad en pixeles a la que avanza cada ciclo) es mayor que la distancia a la que se queda. @done (17-02-14 13:26) @project(ERRORES / _Problema con la colisiones entre elementos tras añadir pathfinding)
 ✔ Al modificar las ubicaciones de las matrices 'matriz_astar' [[E:\Mis documentos\Dropbox\Proyectos Phyton\Pygame.Cris\utilidades\a_star.py::self, origen, destino, mapa, width=22]], hay que asegurarse de que los tamaños de las celdas están bien configurados en todo los módulos afectados. Puede que al generar la matriz junto al elemento (en el state), el atributo 'width' a cada llamada a astar no sea necesario.       [[E:\Mis documentos\Dropbox\Proyectos Phyton\Pygame.Cris\elementos.py::"self.ruta = a_star.Pathfinding(self.map_pos, pos, mapa, width=self.rectcol.w).waypoints_pixel"]] @done (17-02-14 08:40) @project(ERRORES / _Problema con la colisiones entre elementos tras añadir pathfinding)
 ✔ SOLUCIÓN: añado self. a la variable mouse_pos para que la interprete el método 'dialogs' @done (17-02-13 07:37) @project(ERRORES / _La respuesta al diálogo una vez activado, no funciona)
 ✔ ERROR: El personaje detecta la colisión y activa el diálogo pero no funcional la respuesta. @done (17-02-13 07:37) @project(ERRORES / _La respuesta al diálogo una vez activado, no funciona)
 ✔ CAUSA: la variable mouse_pos era local del método handle_events. @done (17-02-13 07:37) @project(ERRORES / _La respuesta al diálogo una vez activado, no funciona)
 
 ✔ Solución: Hacer que la búsqueda incial tras un click se haga en la misma matriz que el pathfinder... @done (17-02-12 09:55) @project(ERRORES / En A-star, cuando se busca un camino no válido (-1), se bloquea programa y error)
 ✔ invoco este módulo a cada click izquierdo, y si True, entonces llamo a pathfinder. @done (17-02-12 09:51) @project(ERRORES / En A-star, cuando se busca un camino no válido (-1), se bloquea programa y error)
 ✔ Añado método 'es_pisable' al módulo astar. @done (17-02-12 09:36) @project(ERRORES / En A-star, cuando se busca un camino no válido (-1), se bloquea programa y error)
 ✔  Causa: Sucede porque al hacer click izquierdo en State, hace una búsqueda de colisiones con collidelist para ver si es pisable, si es sí, llama al pathfinder la cual trabaja con una matriz generada anteriormente en 'escenario' que muestra cuadros no_pisables (1) y pisables (0). Esta última puede no coincidir con el collidelist y causa un error. @done (17-02-12 09:03) @project(ERRORES / En A-star, cuando se busca un camino no válido (-1), se bloquea programa y error)
