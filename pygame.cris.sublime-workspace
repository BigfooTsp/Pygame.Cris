{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ma",
				"mapapos"
			],
			[
				"elee",
				"elements"
			],
			[
				"elemen",
				"element"
			],
			[
				"map",
				"map_pos"
			],
			[
				"nex",
				"nextpos〔variable〕"
			],
			[
				"ne",
				"nextpos〔variable〕"
			],
			[
				"camin",
				"camina_"
			],
			[
				"o",
				"orientacion"
			],
			[
				"mouse",
				"mouse_pos"
			],
			[
				"mo",
				"mouse_pos〔variable〕"
			],
			[
				"dialo",
				"dialog_surface"
			],
			[
				"fase",
				"fase_2"
			],
			[
				"msi",
				"misionPiti"
			],
			[
				"mi",
				"misionPiti"
			],
			[
				"dialog",
				"dialog_cols"
			],
			[
				"dia",
				"dialog_rect"
			],
			[
				"self",
				"self.dialog_surface"
			],
			[
				"quie",
				"quiere_hablar"
			],
			[
				"misi",
				"misionPiti〔function〕"
			],
			[
				"elem",
				"element"
			],
			[
				"bl",
				"bloqueado"
			],
			[
				"spri",
				"spriteinfo〔variable〕"
			],
			[
				"rect",
				"rectval"
			],
			[
				"rec",
				"rectcol〔variable〕"
			],
			[
				"sc",
				"scrollpos〔variable〕"
			],
			[
				"colli",
				"collidelist"
			],
			[
				"cam",
				"camina_S"
			],
			[
				"pos",
				"posabs〔variable〕"
			],
			[
				"next",
				"nextpos"
			],
			[
				"eleme",
				"elementos〔module〕"
			],
			[
				"elemento",
				"elementos"
			],
			[
				"ele",
				"elementos"
			],
			[
				"Grupo",
				"grupo_state"
			],
			[
				"scro",
				"scrollx"
			],
			[
				"perso",
				"personaje〔module〕"
			],
			[
				"p",
				"personajes〔variable〕"
			],
			[
				"per",
				"pers_rectcols〔variable〕"
			],
			[
				"scroll",
				"scrollpos"
			],
			[
				"pers",
				"personaje"
			],
			[
				"re",
				"rectcol"
			],
			[
				"persona",
				"personajes"
			],
			[
				"otro",
				"otrospersonajes"
			],
			[
				"Perso",
				"Personaje"
			],
			[
				"Personaje",
				"PersonajeState"
			],
			[
				"mapa",
				"mapa_sizex〔variable〕"
			],
			[
				"matri",
				"matrizmapa〔variable〕"
			],
			[
				"peros",
				"personajes"
			],
			[
				"_ma",
				"_mapaImagenes"
			],
			[
				"_ju",
				"_jugador〔variable〕"
			],
			[
				"oru",
				"orientacion〔argument〕"
			],
			[
				"di",
				"dibujar"
			],
			[
				"or",
				"orientacion〔argument〕"
			],
			[
				"_",
				"_char_posabs"
			],
			[
				"_ch",
				"_charrect"
			],
			[
				"_cha",
				"_char_posabs"
			],
			[
				"K",
				"K_ESCAPE"
			],
			[
				"screen",
				"screenH"
			],
			[
				"scree",
				"screenW"
			],
			[
				"des",
				"destino"
			],
			[
				"u",
				"utils"
			],
			[
				"_c",
				"_char_pos〔variable〕"
			],
			[
				"po",
				"posabsY"
			],
			[
				"cama",
				"camarasizeX"
			],
			[
				"ca",
				"camarasizeX"
			],
			[
				"camara",
				"camarasizeX〔variable〕"
			],
			[
				"posre",
				"posrelY〔variable〕"
			],
			[
				"nueva",
				"nuevaaccion〔argument〕"
			],
			[
				"sprit",
				"sprites_accion〔variable〕"
			],
			[
				"T",
				"TILE_ANCHO"
			],
			[
				"nu",
				"nuevaaccion〔argument〕"
			],
			[
				"actu",
				"actualizar_posicion"
			],
			[
				"nuev",
				"nuevaaccion"
			],
			[
				"Tile",
				"TILE_ALTO"
			],
			[
				"i",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"C",
				"Cris"
			],
			[
				"Mpo",
				"MposX"
			],
			[
				"Ini",
				"Initialize"
			],
			[
				"baja",
				"bajada"
			],
			[
				"Mp",
				"MposX"
			],
			[
				"bajada",
				"bajada_Par"
			],
			[
				"M",
				"MposY"
			],
			[
				"mario",
				"mario_inv"
			],
			[
				"Mpos",
				"MposY"
			],
			[
				"sal",
				"salto_Par"
			],
			[
				"ba",
				"bajada_Par"
			],
			[
				"xi",
				"xixf"
			],
			[
				"R",
				"Rxixf"
			],
			[
				"K_",
				"K_LEFT"
			],
			[
				"salto",
				"salto_Par"
			],
			[
				"fun",
				"funcionA〔function〕"
			],
			[
				"funci",
				"funcionB"
			],
			[
				"send",
				"sendmail〔function〕"
			],
			[
				"MIM",
				"MIMEText〔module〕"
			],
			[
				"to",
				"to_path"
			],
			[
				"frp",
				"from_upload〔argument〕"
			],
			[
				"from_",
				"from_upload"
			],
			[
				"dbx",
				"dbxpath"
			],
			[
				"prueb",
				"pruebasapp"
			],
			[
				"pr",
				"pruebasapp"
			],
			[
				"for",
				"from_path"
			],
			[
				"from",
				"from_path"
			],
			[
				"path",
				"path_display"
			],
			[
				"pruebas",
				"pruebasapp"
			],
			[
				"pa",
				"path_display"
			],
			[
				"drop",
				"dropbox.files.SearchResult"
			],
			[
				"fil",
				"filesearch"
			],
			[
				"se",
				"searchlist"
			],
			[
				"Ro",
				"RojoLeve"
			],
			[
				"db",
				"dbxpath〔argument〕"
			],
			[
				"E",
				"Exception"
			],
			[
				"s",
				"searchlist〔variable〕"
			],
			[
				"lo",
				"login"
			],
			[
				"ty",
				"typepath〔variable〕"
			],
			[
				"dele",
				"deleted_files"
			],
			[
				"delet",
				"deleted_files"
			],
			[
				"deleted",
				"deleted_files〔argument〕"
			],
			[
				"str",
				"strip"
			],
			[
				"star",
				"startswith"
			],
			[
				"me",
				"metadata"
			],
			[
				"quer",
				"query〔argument〕"
			],
			[
				"qu",
				"query〔argument〕"
			],
			[
				"b",
				"buscarArch〔function〕"
			],
			[
				"q",
				"query"
			],
			[
				"files",
				"files_search"
			],
			[
				"type",
				"typepath"
			],
			[
				"sh",
				"show_scan〔function〕"
			],
			[
				"en",
				"entries〔variable〕"
			],
			[
				"show",
				"show_scan"
			]
		]
	},
	"buffers":
	[
		{
			"file": "juego.py",
			"settings":
			{
				"buffer_size": 730,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "gamemanager/gamemanager.py",
			"settings":
			{
				"buffer_size": 6799,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "gamemanager/states/CollaoState.py",
			"settings":
			{
				"buffer_size": 11158,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import pygame\nfrom pygame.locals import *\nimport elementos\n \n# [.] Tras pathfinding, eliminar comprobacion método para no pisables de escenario (mantener liksta\n# \t\tpara generar matriz de mapa) pero eliminar comprobación a cada paso del personaje. YA que se\n# \t\tcokprueba con la creación de la ruta.\n\nclass GrupoState():\n\t''' Clase que contiene grupos de personajes o objetos. \n\tComprueba colisiones y ordena dibujarlos'''\n\n\telements \t\t= {}\t\n\tmapanopisable \t= False\n\ttest \t\t\t= ['']\t\t\t\t\t\t\t\t# listado de mensajes para modo test.\n\n\tdef add(self, elemento):\n\t\t''' añade personajes al grupo '''\n\t\tself.elements.update({elemento.nombre:elemento})\n\n\n\tdef delete(self, nombre):\n\t\t''' borra personajes al grupo '''\n\t\ttry:\n\t\t\tself.elements.pop(nombre)\n\t\texcept:\n\t\t\tprint ('Error: No se encuentra el elemento a borrar.')\n\n\n\tdef focus(self):\n\t\t''' devuelve el nombre del elemento que está como foco '''\n\t\tfor element in self.elements.values():\n\t\t\tif element.focus:\n\t\t\t\treturn element.nombre\n\n\n\tdef update(self):\n\t\t''' Busca elementos con cambios y actualiza sus posiciones\n\t\ty rectángulos tras comprobar que la nueva posición es pisable'''\n\n\t\t# [.] Modificar para movimiento por click de ratón\n\n\t\tfor element in self.elements.values():\n\t\t\tif element.nextaction:\n\t\t\t\telement.actualizar_sprite()\n\t\t\telement.mover_elemento()\n\t\t\telement.update()\n\t\tcolisiones = self.intercolision()\n\n\t\treturn colisiones\n\n\n\t# Detecta colisiones y reajusta la posición de los elementos para que no se atraviesen.\n\t# Devuelve lista con las colisiones detectadas.\n\tdef intercolision(self):\n\t\t# calculará las distancias necesarias para rectificar la posición del elemento si se traspasan.\n\t\tdef calculadistancias(element):\n\t\t\t# distancia mínima que debería de haber entre los elementos.\n\t\t\tdist = (element.rectcol.w//2 + elotro.rectcol.w//2 +1 , element.rectcol.h//2 + elotro.rectcol.h//2 +1)\n\t\t\t# distancia real.\n\t\t\tdistcol = (abs(element.nextpos[0] - elotro.map_pos[0]), abs(element.nextpos[1] - elotro.map_pos[1]))\n\t\t\treturn dist, distcol\n\n\t\tcolisiones = {}\n\t\tfor element in self.elements.values():\n\t\t\tretroceso = (element.direccion[0] * -1, element.direccion[1] * -1)\n\t\t\tcoltemp = {element.nombre:[]}\n\t\t\tcols = False\n\t\t\tfor elotro in self.elements.values():\n\t\t\t\tif elotro.nombre != element.nombre:\n\t\t\t\t\t# Detecta si hay colisión.\n\t\t\t\t    if element.rectcol.colliderect(elotro.rectcol):\n\t\t\t\t    \tcols = True\n\t\t\t\t    \tcoltemp[element.nombre].append((elotro.nombre,elotro.tipo))\n\n\t\t\t\t    \t# Ajustando las posiciones hasta tener la distancia correcta.\n\t\t\t\t    \tdist, distcol = calculadistancias(element)\n\t\t\t\t    \twhile distcol[0] < dist[0] and distcol[1] < dist[1]:\n\t\t\t\t    \t\tfor n in 0,1:\n\t\t\t\t\t    \t\telement.nextpos[n] += retroceso[n]\n\t\t\t\t\t    \tdist, distcol = calculadistancias(element)\n\t\t\t\t\t    \telement.mover_elemento()\n\t\t\t# Si el elemento ha tenido alguna colisión:\n\t\t\tif cols: \n\t\t\t\tcolisiones.update(coltemp)\n\t\t# Si ha habido colisiones, devuelve diccionario: {elemento1.nombre:[(elemento2.nombre, elemento2.tipo), ...}\n\t\tif len(colisiones) > 0:\n\t\t\treturn colisiones\n\t\telse:\n\t\t\treturn False\n\n\n",
			"file": "grupo_state.py",
			"file_size": 5428,
			"file_write_time": 131318051321295954,
			"settings":
			{
				"buffer_size": 3061,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "elementos.py",
			"settings":
			{
				"buffer_size": 12996,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "utilidades/a_star.py",
			"settings":
			{
				"buffer_size": 30578,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "escenario.py",
			"settings":
			{
				"buffer_size": 7265,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "ToDo.tasks",
			"settings":
			{
				"buffer_size": 9255,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Mis documentos/Dropbox/Proyectos Phyton/Apuntes_python/Basic. Cadenas, listas, tuplas, diccionarios y conjuntos.py",
			"settings":
			{
				"buffer_size": 8577,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Python 3.4.4 (v3.4.4:737efcadf5a6, Dec 20 2015, 19:28:18) [MSC v.1600 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> porderecha = ('derecha', 'adelante')\n>>> porizquierda = ('izquierda', 'adelante')\n>>> for paso in porderecha, porizquierda:\n... print paso\n  File \"<stdin>\", line 2\n    print paso\n        ^\nIndentationError: Missing parentheses in call to 'print'\n>>> print (paso)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'paso' is not defined\n>>> for paso in porderecha, porizquierda:\n... print (paso)\n  File \"<stdin>\", line 2\n    print (paso)\n        ^\nIndentationError: expected an indented block\n>>> for paso in porderecha, porizquierda:\n... \tprint(paso)\n... \n('derecha', 'adelante')\n('izquierda', 'adelante')\n>>> len(porderecha)\n2\n>>> ",
			"settings":
			{
				"buffer_size": 840,
				"line_ending": "Windows",
				"name": "*REPL* [python]",
				"scratch": true
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control:  ",
				"Package Control: Install Package"
			],
			[
				"git:re",
				"Git: Remote"
			],
			[
				"git:stat",
				"Git: Status"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"gith",
				"GitHub Issue: Show Open Issues"
			],
			[
				"virtual",
				"Virtualenv: Activate"
			],
			[
				"virt",
				"Build With: Python + Virtualenv"
			],
			[
				"Snippet: ",
				"Snippet: Function"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"a",
				"Package Control: Advanced Install Package"
			],
			[
				"pack",
				"Preferences: Browse Packages"
			],
			[
				"",
				"Build: Cancel"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes_python",
		"/E/Mis documentos/Dropbox/Proyectos Phyton/Pygame.Cris",
		"/E/Mis documentos/Dropbox/Proyectos Phyton/Pygame.Cris/gamemanager"
	],
	"file_history":
	[
		"/C/Users/Pedro/AppData/Roaming/Sublime Text 3/Packages/PlainTasks/messages/Tutorial.todo",
		"/E/Mis documentos/Dropbox/Proyectos Phyton/Pygame.Cris/ToDo.tasks",
		"/C/Users/Pedro/Dropbox/Notes/hola.note",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/conducta.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/ToDo_archive.tasks",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/tips.todo",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/ToDo_archive_archive.tasks",
		"/C/Users/Pedro/AppData/Roaming/Sublime Text 3/Packages/PlainTasks/PlainTasks (Windows).sublime-settings",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/pygame.cris.sublime-project",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/ToDo.tasks",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/juego.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Basic. Cadenas, listas, tuplas, diccionarios y conjuntos.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/utilidades/utils.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/gamemanager/gamemanager.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/gamemanager/states/CollaoState.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/grupo_state.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/elementos.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/utilidades/scrolling.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/#mundo.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/gamemanager/states/CollaoState - copia.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/escenario.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/personaje.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/mundo.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/gamemanager/states/gamestate.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame.Cris/gamemanager/states/plantillaState.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CrisGamemanager/juego.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CrisGamemanager/utilidades/scrolling.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CrisGamemanager/gamemanager/states/CollaoState.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CrisGamemanager/mundo.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CrisGamemanager/personaje.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CrisGamemanager/escenario.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CrisGamemanager/utilidades/camararazonartificial.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CrisGamemanager/utilidades/utils.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Apuntes/ejemplos/aventurapygame_completo/gamemanager/states/menustate.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/CrisGamemanager/mundo.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/CrisGamemanager/personaje.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/CrisGamemanager/gamemanager/gamemanager.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/CrisGamemanager/gamemanager/states/CollaoState.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/CrisGamemanager/utilidades/utils.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/CrisGamemanager/juego.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/CrisGamemanager/gamemanager/states/__init__.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/teclado.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/CrisGamemanager/escenario.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/escenario.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/utils.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/CrisGamemanager/pruebas.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/__init__.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/personaje.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/CrisGamemanager/teclado.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Apuntes/ejemplos/ estructura juego razonartificial/director.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/Juego.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Apuntes/ejemplos/ estructura juego razonartificial/main.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Apuntes/ejemplos/ estructura juego razonartificial/scene_home.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Apuntes/ejemplos/ estructura juego razonartificial/scene.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/CristinaGame/imagenes/mapadesierto.json",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Apuntes/ejemplos/mover_personaje/sujetos.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Apuntes/ejemplos/mover_personaje/juego.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Sara1/Juego.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Sara1/escenario.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Sara1/utils/utils.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Sara1/teclado.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Sara1/personaje.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Sara1/utils/tiles.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Sara1/__init__.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Sara 1/Sara caminando.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/Sara 1/Imagenes/pixeles de sara caminando.txt",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/juego_mario/Tutorial/pygame_04.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/juego_mario/mario_09.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Medio. Diferfencias entre python 2x y 3x.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/apuntes pygame.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/juego_mario/Tutorial/pygame_07.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/juego_mario/mario_07.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/juego_mario/mario_06.2 3.4.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/juego_mario/Tutorial/pygame_06.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/juego_mario/pygame_06.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Pygame/juego_mario/juego/mario_06. 3.4.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/DropboxRPi.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Medio. Accediendo a datos en listas complejas.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Basic. funcion detro de función.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Basic. yield.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/smtlib/Script. Enviar correo con gmail (Módulo smtplib).py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/smtlib/Script. Enviar correo con gmail (Módulo smtplib).py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/Medio. Python y dropbox.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/DropboxRPi V0.3.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/Consola v.03.py",
		"/C/Users/Pedro/AppData/Roaming/Sublime Text 3/Packages/User/SublimeGit.sublime-settings",
		"/C/Users/Pedro/AppData/Roaming/Sublime Text 3/Packages/SublimeGit/SublimeGit.sublime-settings",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/pruebasdropbox.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/github/DropboxRPi.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Módulo cmd (Construyendo intérprete de comandos).py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/github/Consola.py",
		"/C/Users/Pedro/AppData/Roaming/Sublime Text 3/Packages/User/github_issue.sublime-settings",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/_Pruebas2.py",
		"/C/Users/Pedro/AppData/Roaming/Sublime Text 3/Packages/GitHubIssue/github_issue.sublime-settings",
		"/C/Users/Pedro/AppData/Roaming/Sublime Text 3/Packages/GitHubIssue/Default.sublime-keymap",
		"/C/Users/Pedro/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/usertoken dropbox.txt",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Módulo Datetime, Calendar.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/updown.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/_Pruebas.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Basic. Variables en Python.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/! Apuntes breves.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Módulo Inspect. Introspección en Python.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Módulo Inspect. Obtener las funciones de un módulo con un formato concreto.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/dropbox-sdk-python.pdf",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/Consola.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Script Basic. Eliminar último directorio en direccion.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Módulo Inspect. Obtener función actual y sus llamadas.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Script. Plantilla consola (cmd y colorama).py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Plantilla consola (cmd y colorama).py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Módulo colorama (dar color a la salida en consola).py",
		"/D/Mis Documentos/Dropbox/Apuntes/Script. Ejemplo de consola con CMD (da_console).py",
		"/C/Users/Pedro/AppData/Local/Temp/Rar$DRa0.472/python-directadmin/trunk/directadmin/__init__.py",
		"/C/Users/Pedro/AppData/Local/Temp/Rar$DRa0.720/python-directadmin/trunk/directadmin/api.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/Python and dropbox/Medio. Python y dropbox.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/medio. Intrspección (o reflexión) de objetos.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/DropboxRpi/pruebasdropbox(copia 1).py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Basic. Decoradores y contextmanager.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Basic. manejando errores.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Medio. Generadores (yield, next).py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Basic. Trabajar con ficheros.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Módulo os.path().py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/lista modulos dropbox.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Módulo Dropbox.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Script Basic. Listar entradas y atributos con os.walk().py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Script Basic. Obtener lista de directorios y subdirectorios del directorio actual.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/Módulo os, sys y time.py",
		"/D/Mis Documentos/Dropbox/Proyectos Phyton/Apuntes/_Módulo os.path().py"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"colisiones",
			"self.map_pos",
			"self.nextpos",
			"es_pisable",
			"pathfinding",
			"accesible",
			"self.direccion",
			"direccion",
			"nextpos",
			"direccion",
			"mouse_scroll_pos",
			"mouse_pos",
			"mouse_pos0",
			"pos0",
			"self.pos0",
			"nextpos",
			"self.nextpos",
			"path",
			"nextpos",
			"self.map_pos",
			"nextpos",
			"rectcol",
			"self.elementos",
			"scroll_pos",
			"nextpos",
			"rectcols",
			"variablesingleton",
			"update",
			"objetosnpisables",
			"pers_rectcols",
			"pers_rectnpisables",
			"jugador",
			"self.rect_abs",
			"pos_abs",
			"self.pos_abs",
			"pos_abs",
			"personajesnpisables",
			"objetosnpisables0",
			"objetosnpisables",
			"objetosnpisables0",
			"_matriz_image",
			"_mapaImagenes",
			"_mapatiles",
			"scree",
			"mapa",
			"jugador",
			"_jugadorRect",
			"actualizar",
			"actualizar_ca",
			"coorde",
			"_mapa_size",
			"posx",
			"tiles",
			"_char_pos",
			"_mapa_size",
			"_coordenadas",
			"dibujar",
			"accion",
			"rlacc",
			"dy",
			"dysp",
			"Iniciali",
			"dbx=",
			"[n",
			"[.",
			"[.x",
			"[.]",
			"self.filel",
			"[.]",
			"filelist[0]",
			"directorio inex",
			"[.",
			"apierr",
			"[.]",
			"self.searchlist",
			"filesea",
			"[.]",
			"self.metad",
			"self.filese",
			"self.dbx",
			"buscar",
			"/p",
			"SearchMat",
			"mode",
			"Dx.list(path)\n\tprint (Dx.filelist)\n\tDx.show_scan()",
			"direco",
			"direc",
			"Direco",
			"direco",
			"print(self.file",
			"print (self.file",
			"datet",
			"control",
			"self.resul",
			"self.file",
			"self.meta",
			"self.typ",
			"self.filelist",
			"file",
			"self.flf",
			"self.flv",
			"resultado",
			"result",
			"show",
			"showf",
			"self.re",
			"control",
			"raiz",
			"direcot",
			"self",
			"FORDWAR",
			"Blue",
			"clea",
			"sali",
			"salir",
			",",
			"\"",
			"archlo",
			"archlo ",
			"archlo",
			"[ ]",
			"f=",
			"f =",
			"f=",
			"fullname",
			"folder",
			"list_folder",
			"setupUi"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			" "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "juego.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 730,
						"regions":
						{
						},
						"selection":
						[
							[
								730,
								730
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "gamemanager/gamemanager.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6799,
						"regions":
						{
						},
						"selection":
						[
							[
								3139,
								3139
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1123.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "gamemanager/states/CollaoState.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11158,
						"regions":
						{
						},
						"selection":
						[
							[
								8364,
								8364
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2733.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "grupo_state.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3061,
						"regions":
						{
						},
						"selection":
						[
							[
								489,
								491
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "elementos.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12996,
						"regions":
						{
						},
						"selection":
						[
							[
								5736,
								5736
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2187.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "utilidades/a_star.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30578,
						"regions":
						{
						},
						"selection":
						[
							[
								2268,
								2268
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 689.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "escenario.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7265,
						"regions":
						{
						},
						"selection":
						[
							[
								4718,
								4718
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1547.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "ToDo.tasks",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9255,
						"regions":
						{
						},
						"selection":
						[
							[
								1526,
								1526
							]
						],
						"settings":
						{
							"plain_tasks_remain_time_phantoms":
							[
							],
							"syntax": "Packages/PlainTasks/PlainTasks.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 434.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/E/Mis documentos/Dropbox/Proyectos Phyton/Apuntes_python/Basic. Cadenas, listas, tuplas, diccionarios y conjuntos.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8577,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 840,
						"regions":
						{
						},
						"selection":
						[
							[
								840,
								840
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_indent": false,
							"default_dir": "D:\\Mis Documentos\\Dropbox\\Proyectos Phyton\\Apuntes_python",
							"detect_indentation": false,
							"gutter": false,
							"history_arrows": true,
							"indent_subsequent_lines": false,
							"line_numbers": false,
							"repl": true,
							"repl_external_id": "python",
							"repl_id": "2705b9734c9241c987f785b75cf4803b",
							"repl_restart_args":
							{
								"cmd":
								[
									"python",
									"-i",
									"-u"
								],
								"cwd": "$file_path",
								"encoding": "utf8",
								"extend_env":
								{
									"PYTHONIOENCODING": "utf-8"
								},
								"external_id": "python",
								"syntax": "Packages/Python/Python.tmLanguage",
								"type": "subprocess"
							},
							"repl_sublime2": false,
							"smart_indent": false,
							"spell_check": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.6783625731,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 226.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "pygame.cris.sublime-project",
	"replace":
	{
		"height": 38.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"ToDo_archive.tasks"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 232.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
